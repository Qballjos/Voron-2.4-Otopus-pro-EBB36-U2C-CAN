#Mainsail settings
[include mainsail.cfg]

#Timelapse
[include timelapse.cfg]

#NeoPixel macros
[include neopixel.cfg]

#Steppers config
[include steppers.cfg]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_160048001750534E4E313420-if00

# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

#SB2040
[mcu sb2040]
canbus_uuid: e13d733bb746

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor FLY-SB2040]
sensor_type: temperature_mcu
sensor_mcu: sb2040
min_temp: -50
max_temp: 350

## SB2040板载NTC100K温度
[temperature_sensor case]
sensor_type: ATC Semitec 104GT-2
sensor_pin: sb2040:gpio26
min_temp: -50
max_temp: 350

## FAN0
[fan_generic hotend_fan]
pin: sb2040:gpio14

## FAN1
[fan_generic part_fan]
pin: sb2040:gpio13  

# [extruder]
# microsteps: 16
# gear_ratio: 50:10
# rotation_distance: 22.67895
# nozzle_diameter: 0.400
# filament_diameter: 1.750
# step_pin: sb2040:gpio9
# dir_pin: sb2040:gpio10
# enable_pin: !sb2040:gpio7
# heater_pin: sb2040:gpio6
# sensor_pin: sb2040:gpio27
# sensor_type: ATC Semitec 104GT-2
# min_temp: 0
# max_temp: 350
# control: pid
# pid_Kp: 14.669
# pid_Ki: 0.572
# pid_Kd: 94.068

## sensor_type: PT1000
## pullup_resistor: 1000
## SB2040默认热敏上拉电阻为4700。可通过跳线帽配置为1000，1000更适合PT1000类型的温度传感器

# [tmc2209 extruder]
# uart_pin: sb2040:gpio8
# run_current: 0.600
# stealthchop_threshold: 999999

# ## ADXL345加速度计
# [adxl345]
# cs_pin: sb2040:gpio1
# spi_software_sclk_pin: sb2040:gpio0
# spi_software_mosi_pin: sb2040:gpio3
# spi_software_miso_pin: sb2040:gpio2

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA3
sensor_type: Generic 3950 #NTC 100K beta 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

[idle_timeout]
timeout: 1800

# [safe_z_home]
# ##	XY Location of the Z Endstop Switch
# ##	Update -10,-10 to the XY coordinates of your endstop pin 
# ##	(such as 157,305) after going through Z Endstop Pin
# ##	Location Definition step.
# home_xy_position:-10,-10
# speed:100
# z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

##	Gantry Corners for 350mm Build
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25

speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END